kind: secret
name: minio-key-id
get:
  path: mlflow-server-secret
  name: AWS_ACCESS_KEY_ID

---
kind: secret
name: minio-secret
get:
  path: mlflow-server-secret
  name: AWS_SECRET_ACCESS_KEY

---
kind: pipeline
type: kubernetes
name: example-pipeline

trigger:
  ref:
    - refs/tags/run-example-*

environment:
  PYTHONPATH: /drone/src
  # PATH_CONFIG: /drone/src/lab/processes/config.ini
  MINIO_DATA_FOLDER: /shared-storage/project-template/data
  MLFLOW_URL: http://project-template-mlflow:5000
  MLFLOW_S3_ENDPOINT_URL: http://kdl-server-minio:9000
  USER: ${DRONE_COMMIT_AUTHOR}

steps:
  - name: chown emptydir
    image: alpine
    commands:
      - chown 1000 -R .
  - name: repro
    image: konstellation/kdl-py:3.9-1.3.1
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio-secret
    commands:
      - pipenv install
      - pipenv run dvc repro --pull
      - pipenv run dvc push --run-cache

    volumes:
      - name: shared-storage
        path: /shared-storage
volumes:
  - name: shared-storage
    claim:
      name: kdl-received-data-claim
